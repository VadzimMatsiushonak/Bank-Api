plugins {
    id "org.springframework.boot" version "2.7.5"
    id "io.spring.dependency-management" version "1.0.15.RELEASE"
    id "java"
    id "idea"
}

group = "by.vadzimmatsiushonak"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

repositories {
    mavenCentral()
}

ext {
    swaggerVersion = "3.0.0"
    springBootVersion = "2.7.5"
    springDependencyManagementVersion = "1.0.15.RELEASE"
    springKafkaVersion = "2.9.2"
    springSecurityAuthorizationServerVersion = "0.3.1"
    gsonVersion = "2.10"
    mapstructVersion = "1.5.3.Final"
    lombokMapstructBindingVersion = "0.2.0"

    spring = [
            dataJpa     : "org.springframework.boot:spring-boot-starter-data-jpa",
            validation  : "org.springframework.boot:spring-boot-starter-validation",
            web         : "org.springframework.boot:spring-boot-starter-web",
            security    : "org.springframework.boot:spring-boot-starter-security",
            kafka       : "org.springframework.kafka:spring-kafka:$springKafkaVersion",
            test        : "org.springframework.boot:spring-boot-starter-test",
            securityTest: "org.springframework.security:spring-security-test"
    ]

    database = [
            h2           : "com.h2database:h2",
            mysql        : "com.mysql:mysql-connector-j",
            psql         : "org.postgresql:postgresql",
            liquibaseCore: "org.liquibase:liquibase-core",
    ]

    security = [
            authorizationServer: "org.springframework.security:spring-security-oauth2-authorization-server:$springSecurityAuthorizationServerVersion",
            resourceServer     : "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    ]

    swagger = [
            core   : "io.springfox:springfox-swagger2:$swaggerVersion",
            starter: "io.springfox:springfox-boot-starter:$swaggerVersion",
            ui     : "io.springfox:springfox-swagger-ui:$swaggerVersion",
    ]

    misc = [
            gson                  : "com.google.code.gson:gson:$gsonVersion",
            mapstruct             : "org.mapstruct:mapstruct:$mapstructVersion",
            lombok                : "org.projectlombok:lombok",
            mapstructProcessor    : "org.mapstruct:mapstruct-processor:$mapstructVersion",
            lombokProcessor       : "org.projectlombok:lombok",
            lombokMapstructBinding: "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructBindingVersion"
    ]
}

dependencies {
    implementation spring.dataJpa, spring.validation, spring.web, spring.security, spring.kafka

    implementation database.liquibaseCore
    runtimeOnly database.h2, database.mysql, database.psql

    implementation security.authorizationServer, security.resourceServer

    implementation swagger.core, swagger.starter, swagger.ui

    implementation misc.gson, misc.mapstruct
    compileOnly misc.lombok
    annotationProcessor misc.mapstructProcessor, misc.lombokProcessor, misc.lombokMapstructBinding

    testImplementation spring.test, spring.securityTest
}

tasks.named("test") {
    useJUnitPlatform()
}

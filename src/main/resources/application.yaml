spring:
  datasource:
    url: jdbc:h2:file:~/bank-api-liquibase;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    driverClassName: org.h2.Driver
  jpa:
    spring.jpa.database-platform: org.hibernate.dialect.H2Dialect
    # Modifies the default Spring Boot behavior and populates the data after the schema is generated by Hibernate.
    # Furthermore, we can also use a schema.sql script to build upon the Hibernate-generated schema prior to the population with data.sql.
    # defer-datasource-initialization: true
  h2:
    # An embedded GUI console for browsing the contents of a database and running SQL queries.
    # GUI link: http://localhost:8080/h2-console
    console.enabled: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  liquibase:
    # drop-first parameter is used in case the database schema should be dropped before running Liquibase operations.
    drop-first: true
    change-log: classpath:db/changelog/db.changelog-root.xml
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/oauth2/jwks
  kafka:
    bootstrap-servers: PLAINTEXT://localhost:9092
    consumer:
      group-id: bankapi
    topic:
      logging: logging

server:
  error:
    include-message: always

bank-api:
  security:
    client-id: client
    client-secret: secret
    redirect-uris: http://127.0.0.1/auth, https://oidcdebugger.com/debug